name: Laravel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install dependencies
      run: cp .env.example .env && docker run --rm -u "$(id -u):$(id -g)" -v $(pwd):/opt -w /opt laravelsail/php80-composer:latest composer install --ignore-platform-reqs

    # In this step, this action saves a list of existing images,
    # the cache is created without them in the post run.
    # It also restores the cache if it exists.
    - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

    - name: Build environment
      run: ./vendor/bin/sail build

    - name: Start all the environment
      run: source .env && export WWWUSER=$UID && export WWWGROUP=$GID && ./vendor/bin/sail up -d

    - name: Wait for the environment to get up
      run: |
        while ! docker-compose exec -T mysql mysqladmin --user=$DB_USERNAME --password=$DB_PASSWORD --host "127.0.0.1" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done


    - name: Run the tests
      run: export WWWUSER=$UID && export WWWGROUP=$GID && docker-compose exec -T dogebank.local vendor/bin/phpunit
